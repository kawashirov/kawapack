
namespace Kawashirov.Refreshables {
	public interface IRefreshable {
#if UNITY_EDITOR
		// IRefreshable - вспомогательная штука, которая может быть "обновлена" во время редактирования.
		// Подразумевается, что IRefreshable существуют только во время редактирования (в редакторе)
		// и не всключается в готовую сборку, хотя может быть включена при необходимости,
		// по этому IRefreshable и связанные вспомогательные штуки не являются Editor-скриптами
		// IRefreshable предназначены для автоматизации каких-либо процедур редактирования.
		// Например, в моих скриптах, это:
		// - автоматическое связывание Udon скриптов
		// - пересборка шейдеров
		// - переустановка лайтпроб
		// - и т.д. и т.п. 
		// Поддерживается только:
		// - Component (для не-Persistent объектов на сцене):
		// - - Рекомендуется наследовать EditorRefreshableBehaviour
		// - - Рекомендуется ставить тег EditorOnly
		// - - Удобно тем, что можно хранить какие-то метаданные привязанные к объектам на сцене.
		// - ScriptableObject (для Persistent ассетов, на данный момент нет base-класса)
		// 

		// При вызове этого метода объект должен "обновить" себя
		// Может вызываться и на неактивных объектах,
		// по этому скрипт должен проверить себя на валидное состояние.
		void Refresh();

		// Каждый IRefreshable должен быть Unity Object.
		// В принципе, можно использовать cast, но на будущее...
		UnityEngine.Object AsUnityObject();

		// Путь, где можно найти объект. Используется в логах, что бы понять контекст, если что-то пошло не так.
		// Для ассетов рекомендуется выводить путь/в/проекте/до/ассета.asset
		// Для компонентов на сцене рекомендуется выводить путь/в/проекте/до/сцены.unity/путь/в/иерархии
		// Для компонентов в префабе рекомендуется выводить путь/в/проекте/до/префаба.prefab/путь/в/иерархии
		string RefreshablePath();

#endif
	}
}
